<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.redhat</groupId>
	<artifactId>redhat-demo-project</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>pom</packaging>
	<name>Redhat Demo Project</name>
	<description>Redhat Demo Project.</description>
	<contributors>
		<contributor>
			<name>Cao Chen</name>
			<email>chencao0524@gmail.com</email>
			<organization>Guangzhou Beyond Comm.</organization>
		</contributor>
	</contributors>
	<ciManagement>
		<system>continuum</system>
		<url>http://localhost:8080/continuum</url>
		<notifiers>
			<notifier>
				<type>mail</type>
				<configuration>
					<address>java@5.am</address>
				</configuration>
			</notifier>
		</notifiers>
	</ciManagement>
	<scm>
		<connection>scm:svn:http://redams.googlecode.com/svn/trunk/demo</connection>
		<developerConnection>scm:svn:http://redams.googlecode.com/svn/trunk/demo</developerConnection>
		<tag>scm:svn:http://redams.googlecode.com/svn/tags</tag>
		<url>http://redams.googlecode.com/svn</url>
	</scm>
	<build>
		<plugins>
			<!-- maven 编译版本使用jdk1.6 -->
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.4.2</version>
				<configuration>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.7</version>
				<configuration>
					<downloadSources>true</downloadSources>
					<downloadJavadocs>true</downloadJavadocs>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							**/SystemSQLTest.java
						</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<addMavenDescriptor>false</addMavenDescriptor>
						<index>false</index>
						<manifest>
							<addClasspath>false</addClasspath>
							<addDefaultImplementationEntries>true
							</addDefaultImplementationEntries>
						</manifest>
						<manifestEntries>
							<Project-Name>${project.name}</Project-Name>
							<Project-Version>${project.version}</Project-Version>
							<Implementation-Build>${buildNumber}</Implementation-Build>
							<svnrevision>${svnrevision}</svnrevision>
							<cvstimestamp>${cvstimestamp}</cvstimestamp>
							<cctimestamp>${cctimestamp}</cctimestamp>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<archive>
						<addMavenDescriptor>false</addMavenDescriptor>
						<index>false</index>
						<manifest>
							<addClasspath>false</addClasspath>
							<addDefaultImplementationEntries>true
							</addDefaultImplementationEntries>
						</manifest>
						<manifestEntries>
							<Project-Name>${project.name}</Project-Name>
							<Project-Version>
								${project.version}
							</Project-Version>
							<Implementation-Build>${buildNumber}</Implementation-Build>
							<svnrevision>${svnrevision}</svnrevision>
							<cvstimestamp>${cvstimestamp}</cvstimestamp>
							<cctimestamp>${cctimestamp}</cctimestamp>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>hibernate3-maven-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<components>
						<component>
							<name>hbm2ddl</name>
							<implementation>annotationconfiguration</implementation>
						</component>
					</components>
					<componentProperties>
						<update>true</update>
						<create>true</create>
						<jdk5>true</jdk5>
						<configurationfile>target/test-classes/hibernate.cfg.xml</configurationfile>
						<propertyfile>target/test-classes/hibernate.properties
						</propertyfile>
						<skip>${h3.hbm2ddl.skip}</skip>
						<outputfilename>schema.sql</outputfilename>
					</componentProperties>
				</configuration>
				<executions>
					<execution>
						<phase>test-compile</phase>
						<goals>
							<goal>hbm2ddl</goal>
						</goals>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>${jdbc.groupId}</groupId>
						<artifactId>${jdbc.artifactId}</artifactId>
						<version>${jdbc.version}</version>
					</dependency>
					<dependency>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-api</artifactId>
						<version>${slf4j.version}</version>
					</dependency>
					<dependency>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-log4j12</artifactId>
						<version>${slf4j.version}</version>
					</dependency>
					<dependency>
						<groupId>org.hibernate</groupId>
						<artifactId>hibernate-annotations</artifactId>
						<version>${hibernate.version}</version>
					</dependency>
					<dependency>
						<groupId>org.hibernate</groupId>
						<artifactId>hibernate-core</artifactId>
						<version>${hibernate.version}</version>
					</dependency>
					<dependency>
						<groupId>org.hibernate</groupId>
						<artifactId>hibernate-validator</artifactId>
						<version>${hibernate.validator.version}</version>
						<type>jar</type>
						<scope>compile</scope>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>sql-maven-plugin</artifactId>
				<version>1.1</version>
				<configuration>
					<username>${jdbc.username}</username>
					<password>${jdbc.password}</password>
					<url>${jdbc.url}</url>
					<!--
						You can comment out username/password configurations and have
						maven to look them up in your settings.xml using ${settingsKey}

						<settingsKeys>sensibleKey</settingsKeys>
					-->
					<!--all executions are ignored if -Dmaven.test.skip=true-->
					<driver>${jdbc.driverClassName}</driver>
					<encoding>UTF-8</encoding>
				</configuration>
				<executions>
					<execution>
						<id>insert-module-product-data</id>
						<phase>compile</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<url>${database-url-prefix}${database-name}?characterEncoding=UTF-8
							</url>
							<autocommit>true</autocommit>
							<srcFiles>
								<srcFile>src/main/resources/dataset/product-data.sql</srcFile>
							</srcFiles>
							<skip>${product.sql.skip}</skip>
						</configuration>
					</execution>
					<execution>
						<id>drop-db-before-test-if-any</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<url>${database-url-prefix}</url>
							<!-- need another database to drop the targeted one -->
							<autocommit>true</autocommit>
							<sqlCommand>
								DROP DATABASE IF EXISTS ${database-name}
							</sqlCommand>
							<!-- ignore error when database is not avaiable -->
							<onError>continue</onError>
							<skip>${drop.and.create.db.skip}</skip>
						</configuration>
					</execution>
					<execution>
						<id>create-db</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<url>${database-url-prefix}</url>
							<!-- no transaction -->
							<autocommit>true</autocommit>
							<sqlCommand>
								CREATE DATABASE ${database-name} CHARSET
								UTF8
							</sqlCommand>
							<skip>${drop.and.create.db.skip}</skip>
						</configuration>
					</execution>
					<execution>
						<id>create-schema</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<url>${database-url-prefix}${database-name}?characterEncoding=UTF-8
							</url>
							<autocommit>true</autocommit>
							<srcFiles>
								<srcFile>${my.global.sql}</srcFile>
							</srcFiles>
							<skip>true</skip>
						</configuration>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>${jdbc.groupId}</groupId>
						<artifactId>${jdbc.artifactId}</artifactId>
						<version>${jdbc.version}</version>
					</dependency>
				</dependencies>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>dbunit-maven-plugin</artifactId>
				<version>1.0-beta-3</version>
				<configuration>
					<dataTypeFactoryName>${dbunit.dataTypeFactoryName}
					</dataTypeFactoryName>
					<driver>${jdbc.driverClassName}</driver>
					<username>${jdbc.username}</username>
					<password>${jdbc.password}</password>
					<url>${jdbc.url}</url>
					<type>${dbunit.operation.type}</type>
					<schema>${dbunit.schema}</schema>
				</configuration>
				<executions>
					<execution>
						<id>insert-test-data</id>
						<phase>test-compile</phase>
						<goals>
							<goal>operation</goal>
						</goals>
						<configuration>
							<src>src/test/resources/dataset/sample-data.xml</src>
							<skip>${simple.data.skip}</skip>
							<format>${simple.data.format}</format>
						</configuration>
					</execution>
					<!--
						<execution> <id>insert-product-data</id>
						<phase>test-compile</phase> <goals> <goal>operation</goal>
						</goals> <configuration>
						<src>src/main/resources/dataset/product-data.xml</src>
						<skip>${product.data.skip}</skip>
						<format>${product.data.format}</format> </configuration>
						</execution>
					-->
				</executions>
				<dependencies>
					<dependency>
						<groupId>${jdbc.groupId}</groupId>
						<artifactId>${jdbc.artifactId}</artifactId>
						<version>${jdbc.version}</version>
					</dependency>
				</dependencies>
			</plugin>
		</plugins>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
				<filtering>true</filtering>
			</testResource>
		</testResources>
	</build>
	<reporting>
		<plugins>
			<plugin>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>2.1.1</version>
				<configuration>
					<encoding>UTF-8</encoding>
					<charset>UTF-8</charset>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<encoding>UTF-8</encoding>
					<charset>UTF-8</charset>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>2.1</version>
				<configuration>
					<inputEncoding>UTF-8</inputEncoding>
					<outputEncoding>UTF-8</outputEncoding>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>2.4.3</version>
				<configuration>
					<encoding>UTF-8</encoding>
					<charset>UTF-8</charset>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-clover-plugin</artifactId>
				<version>2.4</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<sourceEncoding>utf-8</sourceEncoding>
					<targetJdk>1.5</targetJdk>
					<rulesets>
						<ruleset>/rulesets/basic.xml</ruleset>
						<ruleset>/rulesets/imports.xml</ruleset>
						<ruleset>/rulesets/unusedcode.xml
						</ruleset>
						<ruleset>/rulesets/controversial.xml
						</ruleset>
					</rulesets>
					<format>xml</format>
					<linkXref>true</linkXref>
					<minimumTokens>100</minimumTokens>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin
				</artifactId>
				<version>2.2</version>
				<configuration>
					<configLocation>config/sun_checks.xml
					</configLocation>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-changes-plugin</artifactId>
				<version>2.1</version>
			</plugin>
			<plugin>
				<artifactId>maven-changelog-plugin</artifactId>
				<version>2.1</version>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>taglist-maven-plugin</artifactId>
				<version>2.3</version>
				<configuration>
					<tags>
						<tag>TODO</tag>
						<tag>@todo</tag>
						<tag>FIXME</tag>
						<tag>XXX</tag>
					</tags>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>2.2</version>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>clirr-maven-plugin</artifactId>
				<version>2.2.2</version>
				<configuration>
					<minSeverity>info</minSeverity>
				</configuration>
			</plugin>
		</plugins>
	</reporting>
	<distributionManagement>
		<!--
			maven 仓库的地址 <repository> <id>internal</id> <url>
			http://repository.gzyf.net:8080/archiva/repository/internal </url>
			</repository> <snapshotRepository> <id>snapshots</id> <url>
			http://repository.gzyf.net:8080/archiva/repository/snapshots </url>
			</snapshotRepository> <site> <id>192.168.101.47</id> <url>
			scp://192.168.101.47/usr/local/apache2.2.6/htdocs/boss </url> </site>
		-->
	</distributionManagement>

	<repositories>
		<repository>
			<id>internal-repository</id>
			<url>http://10.108.10.122/nexus/content/groups/public/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>dayatang</id>
			<url>http://www.dayatang.com/m2/internal</url>
		</pluginRepository>
	</pluginRepositories>

	<dependencyManagement>
		<dependencies>


			<dependency>
				<groupId>com.dayatang.commons</groupId>
				<artifactId>dayatang-commons-spring</artifactId>
				<version>${dayatang.commons.version}</version>
			</dependency>

			<dependency>
				<groupId>com.dayatang.commons</groupId>
				<artifactId>dayatang-commons-spring-test</artifactId>
				<version>${dayatang.commons.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-core</artifactId>
				<version>${spring.security.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-core-tiger</artifactId>
				<version>${spring.security.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-taglibs</artifactId>
				<version>${spring.security.version}</version>
			</dependency>
			<dependency>
				<groupId>quartz</groupId>
				<artifactId>quartz</artifactId>
				<version>1.6.0</version>
			</dependency>



			<!-- jstl-1.1.2.jar -->
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>jstl</artifactId>
				<version>1.1.2</version>
			</dependency>
			<!-- standard-1.1.2.jar -->
			<dependency>
				<groupId>taglibs</groupId>
				<artifactId>standard</artifactId>
				<version>1.1.2</version>
			</dependency>
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>servlet-api</artifactId>
				<version>2.5</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-log4j12</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-lang</groupId>
				<artifactId>commons-lang</artifactId>
				<version>2.4</version>
			</dependency>
			<dependency>
				<groupId>commons-configuration</groupId>
				<artifactId>commons-configuration</artifactId>
				<version>1.6</version>
			</dependency>
			<dependency>
				<groupId>commons-collections</groupId>
				<artifactId>commons-collections</artifactId>
				<version>3.2.1</version>
			</dependency>
			<dependency>
				<groupId>c3p0</groupId>
				<artifactId>c3p0</artifactId>
				<version>0.9.1.2</version>
			</dependency>

			<dependency>
				<groupId>net.sf.json-lib</groupId>
				<artifactId>json-lib</artifactId>
				<classifier>jdk15</classifier>
				<version>2.2.3</version>
			</dependency>
			<dependency>
				<groupId>org.aspectj</groupId>
				<artifactId>aspectjrt</artifactId>
				<version>1.5.4</version>
			</dependency>
			<dependency>
				<groupId>org.aspectj</groupId>
				<artifactId>aspectjweaver</artifactId>
				<version>1.5.4</version>
			</dependency>

			<!-- test -->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.6</version>
			</dependency>
			<dependency>
				<groupId>org.easymock</groupId>
				<artifactId>easymock</artifactId>
				<version>2.3</version>
			</dependency>
			<dependency>
				<groupId>org.easymock</groupId>
				<artifactId>easymockclassextension</artifactId>
				<version>2.2.2</version>
			</dependency>
			<dependency>
				<groupId>org.dbunit</groupId>
				<artifactId>dbunit</artifactId>
				<version>2.4.7</version>
			</dependency>

		</dependencies>
	</dependencyManagement>
	<dependencies>

		<dependency>
			<groupId>${jdbc.groupId}</groupId>
			<artifactId>${jdbc.artifactId}</artifactId>
			<version>${jdbc.version}</version>
		</dependency>

		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
		</dependency>


		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.dbunit</groupId>
			<artifactId>dbunit</artifactId>
			<scope>test</scope>
		</dependency>

		<!--
			<dependency> <groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId> <scope>provided</scope>
			</dependency> <dependency> <groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId> </dependency>
		-->

	</dependencies>
	<profiles>
		<!-- ================= Production Settings Profile ================= -->
		<!-- Use "-P prod" when you want to use the settings in this profile -->
		<!-- =============================================================== -->
		<profile>
			<id>prod</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<database-url-prefix>
					<![CDATA[jdbc:mysql://192.168.101.49:3306/]]>
				</database-url-prefix>
				<database-name>
					<![CDATA[BOSSTEST]]>
				</database-name>
				<jdbc.username>root</jdbc.username>
				<jdbc.password>123456</jdbc.password>
				<jdbc.hostName>192.168.101.49</jdbc.hostName>
				<jdbc.databaseName>BOSSTEST</jdbc.databaseName>
				<drop.and.create.db.skip>false</drop.and.create.db.skip>
			</properties>
		</profile>
		<profile>
			<id>buildnumber</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>buildnumber-maven-plugin</artifactId>
						<executions>
							<execution>
								<phase>validate</phase>
								<goals>
									<goal>create</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<doCheck>true</doCheck>
							<doUpdate>false</doUpdate>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>sql</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<excludes>
								<exclude>none</exclude>
							</excludes>
							<includes>
								<include>**/SystemSQLTest.java</include>
							</includes>
						</configuration>
					</plugin>
				</plugins>
			</build>
			<properties>
				<database-url-prefix>
					<![CDATA[jdbc:mysql://192.168.101.49:3306/]]>
				</database-url-prefix>
				<database-name>
					<![CDATA[BOSSTEST]]>
				</database-name>
				<jdbc.username>root</jdbc.username>
				<jdbc.password>123456</jdbc.password>
				<jdbc.hostName>192.168.101.49</jdbc.hostName>
				<jdbc.databaseName>BOSSTEST</jdbc.databaseName>
				<drop.and.create.db.skip>false</drop.and.create.db.skip>
			</properties>
		</profile>

		<!-- ================= Database Profiles ================= -->
		<profile>
			<id>derby</id>
			<properties>
				<hibernate.dialect>org.hibernate.dialect.DerbyDialect
				</hibernate.dialect>
				<jdbc.groupId>org.apache.derby</jdbc.groupId>
				<jdbc.artifactId>derbyclient</jdbc.artifactId>
				<jdbc.version>10.4.2.0</jdbc.version>
				<jdbc.driverClassName>org.apache.derby.jdbc.ClientDriver
				</jdbc.driverClassName>
				<jdbc.url><![CDATA[jdbc:derby://localhost/boss;create=true]]></jdbc.url>
				<jdbc.username>any</jdbc.username>
				<jdbc.password>value</jdbc.password>
			</properties>
		</profile>
		<profile>
			<id>h2</id>
			<properties>
				<dbunit.dataTypeFactoryName>org.dbunit.ext.hsqldb.HsqldbDataTypeFactory
				</dbunit.dataTypeFactoryName>
				<hibernate.dialect>org.hibernate.dialect.H2Dialect
				</hibernate.dialect>
				<jdbc.groupId>com.h2database</jdbc.groupId>
				<jdbc.artifactId>h2</jdbc.artifactId>
				<jdbc.version>1.1.114</jdbc.version>
				<jdbc.driverClassName>org.h2.Driver</jdbc.driverClassName>
				<jdbc.url><![CDATA[jdbc:h2:${basedir}/target/boss]]></jdbc.url>
				<jdbc.username>sa</jdbc.username>
				<jdbc.password />
			</properties>
		</profile>
		<profile>
			<id>hsqldb</id>
			<properties>
				<dbunit.dataTypeFactoryName>org.dbunit.ext.hsqldb.HsqldbDataTypeFactory
				</dbunit.dataTypeFactoryName>
				<hibernate.dialect>org.hibernate.dialect.HSQLDialect
				</hibernate.dialect>
				<jdbc.groupId>hsqldb</jdbc.groupId>
				<jdbc.artifactId>hsqldb</jdbc.artifactId>
				<jdbc.version>1.8.0.10</jdbc.version>
				<jdbc.driverClassName>org.hsqldb.jdbcDriver</jdbc.driverClassName>
				<jdbc.url><![CDATA[jdbc:hsqldb:${basedir}/target/boss;shutdown=true]]></jdbc.url>
				<jdbc.username>sa</jdbc.username>
				<jdbc.password />
			</properties>
		</profile>
		<profile>
			<id>oracle</id>
			<properties>
				<dbunit.dataTypeFactoryName>org.dbunit.ext.oracle.Oracle10DataTypeFactory</dbunit.dataTypeFactoryName>
				<dbunit.schema>lps</dbunit.schema> <!-- Make sure to capitalize the schema name -->
				<hibernate.dialect>org.hibernate.dialect.Oracle8iDialect</hibernate.dialect>
				<jdbc.groupId>com.oracle</jdbc.groupId>
				<jdbc.artifactId>ojdbc14</jdbc.artifactId>
				<jdbc.version>10.2.0.4.0</jdbc.version>
				<jdbc.driverClassName>oracle.jdbc.OracleDriver
				</jdbc.driverClassName>
				<jdbc.url><![CDATA[jdbc:oracle:thin:@10.108.10.88:5000:LPS]]></jdbc.url>
				<jdbc.username>redhat</jdbc.username>
				<jdbc.password>redhat</jdbc.password>
			</properties>
		</profile>
		<profile>
			<id>postgresql</id>
			<properties>
				<hibernate.dialect>org.hibernate.dialect.PostgreSQLDialect
				</hibernate.dialect>
				<jdbc.groupId>postgresql</jdbc.groupId>
				<jdbc.artifactId>postgresql</jdbc.artifactId>
				<jdbc.version>8.3.603.jdbc4</jdbc.version>
				<jdbc.driverClassName>org.postgresql.Driver</jdbc.driverClassName>
				<jdbc.url><![CDATA[jdbc:postgresql://localhost/boss]]></jdbc.url>
				<jdbc.username>postgres</jdbc.username>
				<jdbc.password>postgres</jdbc.password>
			</properties>
		</profile>
		<profile>
			<!--
				You need to enable TCP/IP Connections for SQL Server 2005 after
				installing.
			-->
			<!-- http://www.mattwoodward.com/blog/index.cfm?commentID=211 -->
			<id>sqlserver</id>
			<properties>
				<dbunit.dataTypeFactoryName>org.dbunit.ext.mssql.MsSqlDataTypeFactory
				</dbunit.dataTypeFactoryName>
				<dbunit.operation.type>MSSQL_CLEAN_INSERT</dbunit.operation.type>
				<hibernate.dialect>org.hibernate.dialect.SQLServerDialect
				</hibernate.dialect>
				<jdbc.groupId>net.sourceforge.jtds</jdbc.groupId>
				<jdbc.artifactId>jtds</jdbc.artifactId>
				<jdbc.version>1.2.2</jdbc.version>
				<jdbc.driverClassName>net.sourceforge.jtds.jdbc.Driver
				</jdbc.driverClassName>
				<jdbc.url><![CDATA[jdbc:jtds:sqlserver://localhost:3683/boss]]></jdbc.url>
				<jdbc.username>sa</jdbc.username>
				<jdbc.password />
			</properties>
		</profile>

		<!-- ================= Container Profiles ================= -->
		<profile>
			<id>jboss</id>
			<properties>
				<cargo.container>jboss4x</cargo.container>
				<cargo.container.home>${env.JBOSS_HOME}</cargo.container.home>
				<cargo.container.url>
					http://sourceforge.net/projects/jboss/files/JBoss/jboss-4.2.2.GA.zip
				</cargo.container.url>
			</properties>
		</profile>
		<!--
			MSN Profile <profile> <id>msn</id> <build> <plugins> <plugin>
			<groupId>com.angus.msn</groupId> <artifactId>msn-plugin</artifactId>
			<executions> <execution> <phase>package</phase> <goals>
			<goal>send</goal> </goals> <configuration> <receivers>
			<param>yangenxiong@hotmail.com</param> <param>lspgdut@163.com</param>
			<param>chencao0524@hotmail.com</param>
			<param>zhch502@hotmail.com</param>
			<param>chen_chong1980@hotmail.com</param>
			<param>david.tao@hotmail.com</param> </receivers>
			<message>${project.name}构建完了,
			http://192.168.101.46:8080/buildresults/${project.artifactId}</message>
			</configuration> </execution> </executions> </plugin> </plugins>
			</build> </profile>
		-->
	</profiles>
	<properties>

		<h3.hbm2ddl.skip>true</h3.hbm2ddl.skip>
		<simple.data.skip>true</simple.data.skip>
		<drop.and.create.db.skip>true</drop.and.create.db.skip>
		<product.data.skip>true</product.data.skip>

		<!-- Application settings -->
		<copyright.year>2010</copyright.year>
		<simple.data.format>xml</simple.data.format>
		<product.data.format>xml</product.data.format>
		<product.sql.skip>true</product.sql.skip>
		<dayatang.commons.version>1.0-SNAPSHOT</dayatang.commons.version>
		<slf4j.version>1.5.11</slf4j.version>
		<spring.version>3.0.2.RELEASE</spring.version>
		<hibernate.version>3.5.1-Final</hibernate.version>
		<hibernate.validator.version>4.0.2.GA</hibernate.validator.version>
		<javassist.version>3.8.0.GA</javassist.version>
		<spring.version>3.0.1.RELEASE</spring.version>
		<spring.security.version>3.0.2.RELEASE</spring.security.version>


		<!-- Database settings -->
		<dbunit.dataTypeFactoryName>org.dbunit.ext.mysql.MySqlDataTypeFactory</dbunit.dataTypeFactoryName>
		<dbunit.operation.type>CLEAN_INSERT</dbunit.operation.type>
		<hibernate.dialect>org.hibernate.dialect.MySQL5InnoDBDialect</hibernate.dialect>
		<jdbc.groupId>mysql</jdbc.groupId>
		<jdbc.artifactId>mysql-connector-java</jdbc.artifactId>
		<jdbc.version>5.1.12</jdbc.version>
		<jdbc.driverClassName>com.mysql.jdbc.Driver</jdbc.driverClassName>
		<database-url-prefix>
					<![CDATA[jdbc:mysql://localhost:3306/]]>
		</database-url-prefix>
		<database-name>
					<![CDATA[RAMS]]>
		</database-name>
		<jdbc.username>root</jdbc.username>
		<jdbc.password>1234</jdbc.password>
		<jdbc.hostName>localhost</jdbc.hostName>
		<jdbc.databaseName>RAMS</jdbc.databaseName>
		<jdbc.url>${database-url-prefix}${database-name}<![CDATA[?createDatabaseIfNotExist=true&amp;characterEncoding=UTF-8&amp;useUnicode=true]]></jdbc.url>
		<init.sql.file>${project.parent.basedir}\\sql\\rams.sql</init.sql.file>
		<my.global.sql>sql\\rams.sql</my.global.sql>
		<hibernate.query.substitutions>true 'Y', false 'N'</hibernate.query.substitutions>
		<hibernate.cache.use_query_cache>false</hibernate.cache.use_query_cache>
		<hibernate.cache.provider_class>org.hibernate.cache.EhCacheProvider</hibernate.cache.provider_class>
		<hibernate.hbm2ddl.auto>update</hibernate.hbm2ddl.auto>
		<hibernate.show_sql>true</hibernate.show_sql>
		<hibernate.format_sql>true</hibernate.format_sql>
		<hibernate.connection.autocommit>false</hibernate.connection.autocommit>
	</properties>

	<modules>
		<module>application</module>
		<module>core</module>
		<module>web</module>
	</modules>

</project>